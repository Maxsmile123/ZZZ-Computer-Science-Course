name: CI

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Run cmake
      run: |
          mkdir build_debug
          cd build_debug
          cmake -DCMAKE_BUILD_TYPE=ASAN ..

     - name: Run clang-tidy
       run: |
            [[ -z "${GITHUB_BASE_REF}" ]] && BRANCH_VAR=HEAD~1 || BRANCH_VAR=origin/${GITHUB_BASE_REF}
            echo "${BRANCH_VAR}"
            echo "$(git diff --name-only ${BRANCH_VAR})"
            EXCLUDE_PATTERNS="-e '/tools/' -e 'contrib' "
            LIST_CHECK_FILES=$(git diff --name-only ${BRANCH_VAR} | grep --color=never '.cpp' | grep -v ${EXCLUDE_PATTERNS} | tr '\n' ' ')
            if [[ -n ${LIST_CHECK_FILES} ]]
            then
              sudo apt install -y clang-tidy-14
              curl -o tools/run-clang-tidy https://raw.githubusercontent.com/llvm-mirror/clang-tools-extra/release_90/clang-tidy/tool/run-clang-tidy.py
              python3 ./tools/run-clang-tidy -clang-tidy-binary clang-tidy-14 -p build_debug -q -j$(nproc) ${LIST_CHECK_FILES}
            else
              echo "Nothing check in clang-tidy"
            fi

    - name: Test
      run: |
        LIST_CHECK_FILES=$(git diff --name-only ${BRANCH_VAR} | grep --color=never '.cpp' | grep -v ${EXCLUDE_PATTERNS} | tr '\n' ' ')
        List_run_test=()
        cd build_debug
        for file in LIST_CHECK_FILES
        do
          List_run_test+=({$(echo $file | cut -d/ -f2)}{$(echo $file | cut -d/ -f4)})
        done
        $List_run_test=(echo "$List_run_test" | tr ' ' '\n' | sort | uniq)
        for file in $List_run_test
        do
          make file
          ./file
        done

