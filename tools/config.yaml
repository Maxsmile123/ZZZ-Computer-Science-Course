# Struct for generator params looks like that:
# enable_generator_func:
#   - generate_struct
#   - generate_solution_files
#   - clear_repository
#   - generate_task_description
#   - generate_varinants

# They all turn on by default. 
# So, if you would like remove
# one of them - write this function in this
users_list: ./tools/students
template_dir: ./tools/templates
path_to_task: ./tasks
task_descriptions: {
  linux: {
    var_num: 5,
  },
  hack: {},
  turing_machine: {
    var_num: 53,
    data_path: ./tools/data/5.txt,
    template_solution: {
      turing_machine.tu: solution.tu
    }
  },
  turing_diagrams: {
    var_num: 48,
    data_path: ./tools/data/6.txt,
  },
  nam: {
    var_num: 42,
    data_path: ./tools/data/7.txt,
    template_solution: {
      nam.nam: solution.nam
    }
  },
  reverse: {
    var_num: 27,
  },
  geometry: {
    var_num: 30,
    template_solution: {
      geometry.c: solution.c
    }
  },
  finite_state_machine: {
    var_num: 43,
    data_path: ./tools/data/11.txt,
    template_solution: {
      fsm_template.c: FSM.c,
      regex_template.c: regex.c
    }
  },
  integers: {
    var_num: 33,
    data_path: ./tools/data/12.txt,
    template_solution: {
      integers.c: solution.c
    }
  },
  bitsets: {
    var_num: 29,
    data_path: ./tools/data/13.txt,
    template_solution: {
      bitsets.c: solution.c
    }
  },
  linerization: {
    var_num: 28,
    template_solution: {
      linerization.c: solution.c
    }
  },
  matrix: {
    var_num: 35,
    data_path: ./tools/data/15.txt,
    template_solution: {
      matrix.c: solution.c
    }
  },
  taylor: {
    var_num: 28,
    template_solution: {
      taylor.c: solution.c
    }
  },
  numerical_methods: {
    var_num: 28,
    template_solution: {
      numerical_methods.c: solution.c
    }
  },
}