1* - Входное слово представляет собой два троичных числа без знака, разделенные знаком "+". Составить алгоритм вычисления суммы этих чисел.
2* - Входное слово представляет собой два троичных числа без знака, разделенные знаком "+". Составить алгоритм вычисления разности этих чисел.
3* - Входное слово представляет собой троичное число без знака. Составить алгоритм копирования числа. Результат должен состоять из исходного слова и его копии, разделенных знаком "=".
4* - Входное слово представляет собой троичное число без знака. Составить алгоритм реверса (инвертирования) числа (записи его цифр в обратном порядке).
5 - Составить алгоритм перевода числа из троичной системы счисления в девятиричную.
6 - Составить алгоритм перевода числа из девятиричной системы счисления в троичную.
7* - Входное слово представляет собой два троичных числа без знака, разделенные знаком "<". Составить алгоритм вычисления троичного логического сдвига первого числа влево на число разрядов второго числа.
8* - Входное слово представляет собой два троичных числа без знака, разделенные знаком ">". Составить алгоритм вычисления троичного логического сдвига первого числа вправо на число разрядов второго числа.
9* - Входное слово представляет собой два двоичных числа без знака, разделенные знаком "<". Составить алгоритм вычисления двоичного логического сдвига второго числа влево на число разрядов, равное первому числу.
10* - Входное слово представляет собой два двоичных числа без знака, разделенные знаком ">". Составить алгоритм вычисления двоичного логического сдвига второго числа вправо на число разрядов, равное первому числу.
11** - Входное слово представляет собой два двоичных числа без знака, разделенные знаком "*". Составить алгоритм вычисления двоичного арифметического сдвига второго числа влево на число разрядов, равное первому числу
12** - Входное слово представляет собой два двоичных числа без знака, разделенные знаком "/". Составить алгоритм вычисления двоичного арифметического сдвига второго числа вправо на число разрядов, равное первому числу.
13** - Входное слово представляет собой два двоичных числа без знака, разделенные знаком "~". Составить алгоритм вычисления двоичного циклического сдвига. второго числа влево на число разрядов первого числа.
14** - Входное слово представляет собой два двоичных числа без знака, разделенные знаком "~". Составить алгоритм вычисления двоичного циклического сдвига второго числа вправо на число разрядов первого числа.
15** - Входное слово представляет собой два двоичных числа без знака, разделенные знаком "$". Составить алгоритм выделения разрядов первого числа по маске, в качестве которой используется второе число.
16** - Входное слово представляет собой два двоичных числа без знака, разделенные знаком "$". Составить алгоритм выделения разрядов второго числа по маске, в качестве которой используется первое число.
17* - Входное слово представляет собой два двоичных числа без знака, разделенные знаком "&". Составить алгоритм вычисления поразрядной конъюнкции исходных чисел.
18* - Входное слово представляет собой два двоичных числа без знака, разделенные знаком "|". Составить алгоритм вычисления поразрядной дизъюнкции исходных чисел.
19* - Входное слово представляет собой произвольную последовательность десятичных чисел без знака, разделенных знаками "#". Составить алгоритм вычисления числа слов в последовательности.
20* - Входное слово представляет собой два троичных числа без знака, разделенные знаком "^". Обменять числа местами.
21** - Входное слово представляет собой два двоичных числа без знака, разделенные знаком "%". Вычислить наибольший общий дслитсль исходных чисел.
22 - Входное слово представляет собой десятичную запись целого неотрицательного числа в прямой кодировке. Получить дополнительную кодировку для отрицательного числа с тем же абсолютным значением.
23 - Входное слово представляет собой десятичную запись целого неотрицательного числа в прямой кодировке. Получить обратную кодировку для отрицательного числа с тем же абсолютным значением.
24** - Составить алгоритм умножения двух неотрицательных целых чисел в алфавите {|}.
25 - Составить алгоритм увеличения на единицу целого неотрицательного числа в шестнадцатиричной позиционной системе счисления.
26 - Составить алгоритм уменьшения на единицу целого неотрицательного числа в шестнадцатиричной позиционной системе счисления.
27 - Составить алгоритм, восстанавливающий целое число в шестнадцатиричной позиционной системе счисления по его дополнительному коду.
28 - Составить алгоритм, восстанавливающий целое число в шестнадцатиричной позиционной системы счисления по его обратному коду.
29** - Составить алгоритм натурализации десятичного числа в позиционной записи (перевода в единичную систему счисления {|}).
30 - Входное слово представляет собой два двоичных числа без знака, разделенных символом "&&". Составить алгоритм вычисления логического произведения (&& в Си) исходных чисел.
31 - Составить алгоритм кодирования слова в латинском алфавите по Цезарю.
32** - Входное слово представляет собою последовательность латинских букв, за которой следует двоичное число. Составить алгоритм кодирования первого слова по коду Цезаря с ключом, равным второму слову.
33 - Составить алгоритм перевода числа из четверичной системы счисления в шестнадцатиричную.
34 - Составить алгоритм перевода числа из шестнадцатиричной системы счисления в четверичную.
35 - Составить алгоритм двоичного подсчёта числа гласных в слове латинского алфавита.
36** - Составить алгоритм подсчета в натуральной систсмс числа чётных членов в последовательности десятичных чисел, разделенных “;”.
37** - Составить алгоритм возведения числа в натуральной записи в квадрат.
38** - Составить алгоритм возведения числа в кардинальной записи в квадрат.
39 - Составить алгоритм перевода десятичных цифровых сообщений в азбуку Морзе.
40* - Составить алгоритм вычисления двоичного числа — двоичного логарифма двоичного числа.
41* - Составить алгоритм вычисления троичного числа — троичного логарифма троичного числа.
42*** - Составить алгоритм проверки делимости десятичного числа на 11.
